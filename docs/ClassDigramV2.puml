@startuml
package entries{
    class Main{
        + {static} void main(String[] args)
    }
}
package ui{
    class Program {
       - boolean isRunning
       - ArrayList<Tournament> tournaments
       - HashMap<String, Team>  teams
       - UI ui
       - IO io
       - HashMap<String, Menu> navigation
        + void start()
        + void run()
        + void quit()
    }

    class UI{
        - Scanner sc
        + String getUserOption(String msg, int numOfValidOptions, String lastOptionKey)
        + String getUserOption(String msg, String[] vaildOptions)
        + String getUserInput(String msg)
        + void printOptions(String[] msgOptions, String lastOptionKey)
        + void newLine()
        + void println(String msg)
        + void print(String msg)
        + void clear()
    }
    package navigation{
        abstract class Menu {
            - String[] msgOptions
            # String name
            # UI ui
            - boolean isHeaderShown

            + void clearScreen()
            - void updatenavigation(HashMap<String, Menu> navigation)
            - void showHeader()
            # void showCustomHeader(String customHeader)
            - void showOptions(String lastOptionKey)
            + {abstract} void show(HashMap<String, Menu> navigation)
            # void show(HashMap<String, Menu> navigation, String lastOptionKey)
            # int getNumberOfOptions()
        }

        class QuitMenu {
            - Program app

            + void show(HashMap<String, Menu> navigation)
        }

        class MainMenu {
            + void show(HashMap<String, Menu> navigation)
        }

        class TournamentsMenu {
            - ArrayList<Tournament> tournaments

            + void show(HashMap<String, Menu> navigation)
            - void showAllTournaments(HashMap<String, Menu> navigation)

        }

        class NewTournamentMenu {
            - ArrayList<Tournament> tournaments

            + void show(HashMap<String, Menu> navigation)
            - KnockOutTournament createNewKnockOutTournament()
        }

        class NewTeamMenu {
            - HashMap<String, Team> teams

            + void show(HashMap<String, Menu> navigation)
            - void createNewTeam(HashMap<String, Menu> navigation)
            - Playerlayer createPlayer()
        }

        class TeamsMenu {
            - HashMap<String, Team> teams

            + void show(HashMap<String, Menu> navigation)
            - void goToTeam(HashMap<String, Menu> navigation)
            - void showAllTeams(HashMap<String, Menu> navigation)
        }

        class TeamMenu {
            - Team team

            + void show(HashMap<String, Menu> navigation)
            + void show(HashMap<String, Menu> navigation, Team team)
        }


    }
}
package database
{
    class IO{
        - Scanner sc
        + void readFromFile(String path)
        + void writeToFile(String path)
    }
}

package domain{
    package tournament{
        abstract class Tournament {
             # String name
             # Sport tournamentType
             # ArrayList<Team> contenders
             # MatchProgram program
             # ArrayList<TournametHistory> history

             + {abstract} void createMatchProgram(String matchType)
             + {abstract} MatchProgram getMatchProgram()
             + {abstract} String toString()
             + {abstract} void viewTeamsRanking()
             + {abstract} void viewTeams()
        }

        class Sport {
            + String SPORTNAME
            - ArrayList<String> rules

            + ArrayList<String> getRules()
            + void addRule()
        }

        class GroupTournament
        {
            - ArrayList<Group> groups
            - KnockOutTournament finals
            + void createMatchProgram(String matchType)
            + MatchProgram getMatchProgram()
            + String toString()
            + void viewTeamsRanking()
            + void viewGroupsRanking()
            + void viewTeams()
        }

        class TournamentTeam {
            - Team team
            - int point
            - int score

            + void addPoint()
            + void addScore()
        }

        class Group {
            ArrayList<TournamentTeam> members

            + ArrayList<TournamentTeam> getMembers()
            + void sortRanking()
        }

        class KnockOutTournament
        {

            + void createMatchProgram(String matchType))
            + MatchProgram getMatchProgram()
            + String toString()
            + void viewTeamsRanking()
            + void viewTeams()
        }

        class TournametHistory{
            - LinkedMap<String, int>
            - ArrayList<Match> matchs
        }
    }
    package team{
        class Team {
            - String name
            - ArrayList<Player> teamMembers
            - TeamHistory history

            + String getName()
            + void setName(String name)
            + ArrayList<Player> getTeamMembers()
            + void setTeamMembers(ArrayList<Player> teamMembers)
            + void addMember(Player a)
            + TeamHistory getHistory()
            + void setHistory(TeamHistory history)

            + ArrayList<Player> getMembers()
        }

        class TeamHistory {
            - LinkedMap<String, int> teamStreak
            - LinkedMap<String, int> tournametHistoryResults
            - ArrayList<Match> matches
            - Team team

            + void addMatch()
            + void addtournametHistoryResult()
            - void updateTeamStreak()
            + String toString()
        }

        class Player {
            - String name

            + String getName()
            + String setName(String name)
            + String toString()
        }
    }
    package match {
        class MatchProgram {
            - ArrayList<ArrayList<Match>> knockoutBracket
            - ArrayList<Match> allMatches
            - ArrayList<Match> upcomingMatches
            - int currentRound
            - ArrayList<Team> teams
            - int[] tourSize
            - String scoreOrTIme

            + void setMatchType(String matchType)
            + void addTeam(Team team)
            + void removeTeam(String name)
            + void removeTeam(Team team)
            + ArrayList<Team> getTeams()
            + ArrayList<Match> getAllMatchesORUpcomingMatches(int ab)
            + String advanceKnockoutTournament()
            + void createMatchProgram()
            - Match createEmptyMatch()
            + void switchTeams(Match m1, int t1, Match m2, int t2)
            + void changeMatchContenders(Match m, team t, int ab)
            - void checkIfInTeams(Team t)
            + Match getMatchByID()
            + String toString()
        }

        abstract class Match {
            - MatchResult result
            - Team[] teams
            - Date date
            - Team winner

            + setTeams(Team a, Team b)
            + exchangeTeamX(Team a, int x)
            + String homeAndGuestTeam()
            + setDate(Date date)
            + Date getDate()
            + void setResult(int HomeScore, int GuestScore)
            + int[] getScore()
            + getCalculatedScore
            + void setWinner()
            + Team getWinner()
            + String toString()
        }

        class MatchByTime {
            - int minutes

            + void setMinutes()
            + int getMinutes()
            + int[] getScore()
            + void setResult(int HomeScore, int GuestScore)
        }

        class MatchResult {
            - int HomeScore
            - int GuestScore

            + void setResult(int HomeScore, int GuestScore)
            + int[] calculateScore()
            + int[] getScore()
        }
    }
}
Team o-- Player
Team o-- TeamHistory

Match o-- MatchResult
Match o-- Team
Match <|-- MatchByScore
Match <|-- MatchByTime

Tournament o-- Sport
Tournament o-- TournametHistory
Tournament o-- MatchProgram
Tournament o-- Team
Tournament <|-- KnockOutTournament
Tournament <|-- GroupTournament

MatchProgram o-- Match

Group o-- TournamentTeam
GroupTournament o-- Group
GroupTournament o-- KnockOutTournament

TournamentTeam o-- Team
TournametHistory o-- Match
TeamHistory o-- Match

Menu <|-- MainMenu
Menu <|-- TournamentsMenu
Menu <|-- NewTournamentMenu
Menu <|-- QuitMenu
Menu <|-- NewTeamMenu
Menu <|-- TeamMenu
Menu <|-- TeamsMenu

TeamsMenu o-- Team
TeamMenu o-- Team
NewTeamMenu o-- Team

TournamentsMenu o-- Tournament
NewTournamentMenu o-- Tournament

Program --o QuitMenu
Program o-- Menu
Program o-- UI
Program o-- Tournament
Program o-- Team
Program o-- IO

Menu o-- UI

Main o-- Program
@enduml